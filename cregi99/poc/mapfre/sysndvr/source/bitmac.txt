         MACRO
         BITMAC  &BYTE=
.*       MHELP  27
.*  TITLE 'BITMAC'
.*
.*    COPYRIGHT (C) 1986-2013 CA. ALL RIGHTS RESERVED.
.*
.*    THIS MACRO PARSES A STRING TO DETERMINE THE EXISTENCE,
.*    POSITION AND LENGTH OF PERMISSIONS WHICH HAVE BEEN ENCODED
.*    IN CHARACTER FORM.  FOR EXAMPLE, A USER WHO WISHES TO ASSIGN
.*    RETRIEVE, UPDATE AND ADD PERMISSIONS TO A USER WOULD
.*    CODE 'RUA' WHICH WILL BE INTERPRETED AND PLACED INTO ITS
.*    BIT EQUIVALENT BY THIS MACRO (IE. X'40'+X'20'+X'80') =X'E0'
.*    AND SO ON.
.*
.*    BITMAC ACCEPTS A VARYING CHARACTER STRING IN THE CHARACTER SYMBOL
.*     &STR. IT RETURNS THE RESOLVED CHARACTER BACK INTO &STR
.*
.*    WHEN RETRIEVE IS SPECIFIED ON BYTE 1,
.*     FORCE BROWSE ON BYTE 2.
.*
.START   ANOP
.*
         GBLB  &USERETR
         GBLC  &STR              CONTAINS INPUT STRING
         LCLA  &CHARNDX,&STRLTH,&TRANNDX
         LCLC  &SCAN1(9),&TRAN1(9)
         LCLC  &SCAN2(9),&TRAN2(9)
         LCLC  &XTEMP,&OPER,&XOUT,&MTEMP
&OPER    SETC '+'
&XOUT    SETC 'X''00'''  USED FOR XOUT OF USED PERMISSION CODES
&XTEMP   SETC 'X''00'''  INIT TO NULLS
.*
.*        TO ADD PERMISSIONS TO SECURITY PROCESSING, CREATE
.*        ENTRIES IN THE &SCAN TABLE DEFINING THE CHARACTER
.*        CORRESPONDING TO THE NEW ACTIONS THEN ADD IT'S BIT
.*        EQUIVALENT TO THE &TRAN TABLE.  THE BIT VALUE
.*        PLACED INTO AN &TRAN SLOT WILL BE GENERATED BY THE
.*        CONSDEF MACRO IN A CONSUSER TABLE ENTRY.
.*
.*
&SCAN1(1) SETC 'A'    ADD
&SCAN1(2) SETC 'R'    RETRIEVE
&SCAN1(3) SETC 'U'    UPDATE
&SCAN1(4) SETC 'M'    MOVE
&SCAN1(5) SETC 'D'    DELETE
&SCAN1(6) SETC 'S'    SIGN-IN OVERRIDE
&SCAN1(7) SETC 'P'    PROCESS
&SCAN1(8) SETC 'Z'    PRIVILEGED
&SCAN1(9) SETC 'N'    NO PERMISSIONS
&TRAN1(1) SETC 'X''80''' ADD
&TRAN1(2) SETC 'X''40''' RETRIEVE
&TRAN1(3) SETC 'X''20''' UPDATE
&TRAN1(4) SETC 'X''10''' MOVE
&TRAN1(5) SETC 'X''08''' DELETE
&TRAN1(6) SETC 'X''04''' SIGN-IN OVERRIDE
&TRAN1(7) SETC 'X''02''' PROCESS
&TRAN1(8) SETC 'X''01''' PRIVILEGED
&TRAN1(9) SETC 'X''00''' NO ACCESS
&SCAN2(1) SETC 'B'      BROWSE
&SCAN2(2) SETC 'V'      ARCHIVE
&SCAN2(3) SETC 'C'    CHANGE TYPE
&SCAN2(4) SETC ' '    RESERVED
&SCAN2(5) SETC '1'    USER PRIV #1
&SCAN2(6) SETC '2'    USER PRIV #2
&SCAN2(7) SETC '3'    USER PRIV #3
&SCAN2(8) SETC '4'    USER PRIV #4
&SCAN2(9) SETC 'N'    NO PERMISSIONS
&TRAN2(1) SETC 'X''80''' BROWSE
&TRAN2(2) SETC 'X''40''' ARCHIVE
&TRAN2(3) SETC 'X''20''' CHANGE TYPE
&TRAN2(4) SETC 'X''10''' RESERVED
&TRAN2(5) SETC 'X''08''' USER PRIV #1
&TRAN2(6) SETC 'X''04''' USER PRIV #2
&TRAN2(7) SETC 'X''02''' USER PRIV #3
&TRAN2(8) SETC 'X''01''' USER PRIV #4
&TRAN2(9) SETC 'X''00''' NO ACCESS
&CHARNDX SETA 1                 START WITH 1ST CHARACTER
&TRANNDX SETA 1                 START WITH 1ST CHARACTER
&STRLTH  SETA K'&STR            OBTAIN LENGTH OF STRING
.*
.*
.*      LOOP UNTIL A TRAN CHARACTER IS FOUND
.*
         AIF ('&BYTE' NE '1').SC2LOOP
&USERETR SETB  0
.SC1LOOP ANOP
    AIF ('&STR'(&CHARNDX,1) EQ '&SCAN1(&TRANNDX)').DOTRAN1
&TRANNDX SETA &TRANNDX+1
    AIF (&TRANNDX LE 9).SC1LOOP
&MTEMP   SETC  '&STR'(&CHARNDX,1)            HOLD THE CHARACTER
    MNOTE 16,'PERMISSION CHARACTER &MTEMP INVALID .. PLEASE SEE ENDEVORX
               -C1 ADMIN GUIDE'
    MEXIT
.DOTRAN1 ANOP
.* CHECK IF RETRIEVE WAS SPECIFIED, IF SO, SAVE AN INDICATOR
.* FOR BYTE 2 SO THAT BROWSE WILL BE FORCED.
         AIF   (&TRANNDX NE 2).NOTRETR
&USERETR SETB  1
.NOTRETR ANOP
&XTEMP   SETC     '&TRAN1(&TRANNDX).&OPER.&XTEMP'
&TRAN1(&TRANNDX) SETC '&XOUT'  SET ALREADY USED PERMISSION TO X'00'
&CHARNDX SETA &CHARNDX+1      INCREMENT LOOP COUNT
&TRANNDX SETA 1
    AIF (&CHARNDX GT &STRLTH).ENDSTR
    AGO .SC1LOOP
.*
.SC2LOOP ANOP
    AIF ('&STR'(&CHARNDX,1) EQ '&SCAN2(&TRANNDX)').DOTRAN2
&TRANNDX SETA &TRANNDX+1
    AIF (&TRANNDX LE 9).SC2LOOP
    MNOTE 16,'PERMISSION CHARACTER &MTEMP INVALID .. PLEASE SEE ENDEVORX
               -C1 ADMIN GUIDE'
    MEXIT
.DOTRAN2 ANOP
&XTEMP   SETC     '&TRAN2(&TRANNDX).&OPER.&XTEMP'
&TRAN2(&TRANNDX) SETC '&XOUT'  SET ALREADY USED PERMISSION TO X'00'
&CHARNDX SETA &CHARNDX+1      INCREMENT LOOP COUNT
&TRANNDX SETA 1
    AIF (&CHARNDX GT &STRLTH).ENDSTR2
    AGO .SC2LOOP
.*
.* CHECK IF RETRIEVE WAS SPECIFIED ON BYTE 1.
.* IF SO, FORCE BROWSE IF IT WAS NOT ALREADY SPECIFIED.
.ENDSTR2 ANOP
         AIF   (NOT &USERETR).ENDSTR
&USERETR SETB  0
         AIF   ('&TRAN2(1)' EQ '&XOUT').ENDSTR
&XTEMP   SETC  '&TRAN2(1).&OPER.&XTEMP'
         AGO   .ENDSTR
.*
.ENDSTR  ANOP
.*
&STR     SETC '&XTEMP'
         MEND
         EJECT
