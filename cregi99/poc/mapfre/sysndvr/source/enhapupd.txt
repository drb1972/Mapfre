ENHAPUPD TITLE 'ENDEVOR - API SAMPLE ASSEMBLER PROGRAM'
***********************************************************************
*   DESCRIPTION: THIS SAMPLE PROGRAM ISSUES A REQUEST TO THE
*                ENDEVOR API TO EXECUTE EACH OF THE PACKAGE "UPDATE"
*                TYPE ACTION FUNCTIONS SUPPORTED BY THE API.
*
*   HOW TO USE:  POPULATE THE CONTROL AND REQUEST BLOCKS WITH THE
*                DESIRED VALUES.
*                ASSEMBLE AND LINK-EDIT THIS MODULE.
*
*   LINK EDIT:   AMODE=31,RMODE=24,RENT,REUS (RECOMMENDED)
*                OR
*                AMODE=24,RMODE=24,RENT,REUS
*
*   REGISTERS ON ENTRY:
*
*   REGISTER USAGE:
*                R2     -> SAVE RETURN CODE
*                R3     -> SAVE REASON CODE
*                R12    -> BASE PROGRAM
*                R13    -> STANDARD USAGE........
*                R15    -> RETURN CODE FROM CALL
*   ==>                 -> WE USE STANDARD STACK SAVEAREA USAGE
*
*   THIS TEST PROGRAM PERFORMS THE FOLLOWING PACKAGE ACTIONS;
*         -- PAPP     APPROVE A PACKAGE
*         -- PBKI     BACKIN A PACKAGE
*         -- PBKO     BACKOUT A PACKAGE
*         -- PCAS     CAST A PACKAGE
*         -- PCOM     COMMIT A PACKAGE
*         -- PCOR     CREATE/MODIFY/DELETE A CORRELATION RECORD
*         -- PDEL     DELETE A PACKAGE
*         -- PDEN     DENY A PACKAGE
*         -- PEXE     EXECUTE A PACKAGE
*         -- PRES     RESET A PACKAGE
*         REQUIRED MODIFICATIONS TO MAKE THIS EXECUTE:
*         -- NOTE: THERE ARE LINES OF CODE THAT ARE COMMENTED OUT.
*            THEY EXIST AS PLACE HOLDERS TO OTHER FEATURES OR OPTIONS
*            NOT USED BY THIS EXAMPLE. THEY CAN BE IDENTIFIED BY
*            THE **CMT IN COLUMNS 1 THROUGH 5.
*         -- CHANGE THE PACKAGE ID FIELD VALUES (PKGIDVALUE) AND THE
*            PACKAGE CORRELATION ID VALUES (PKGCORRID) TO VALUES
*            THAT EXIST AT YOUR SITE.
*         -- MAKE SURE THE MSG AND LST DDNAMES ARE ALLOCATED IN
*            THE JCL USED TO EXECUTE THIS PROGRAM.
*         NOTE: THE WCNT VARIABLE CAN BE SET TO CONTROL WHICH AND
*            HOW MANY ACTIONS ARE EXECUTED.  AS DELIVERED, ALL 11
*            LIST PACKAGE ACTION WILL BE EXECUTED.
***********************************************************************
*   WORKAREA
***********************************************************************
WORKAREA DSECT
SAVEAREA DS    18F
WPARMLST DS    3A                      PARAMETER LIST
WCNT     DS    H                       ACTION COUNTER
         DS     0D
***********************************************************************
* API CONTROL BLOCK
***********************************************************************
         ENHAACTL DSECT=NO
***********************************************************************
* API PACKAGE ACTION REQUEST BLOCKS
***********************************************************************
         ENHAPAPP DSECT=NO
         ENHAPBKI DSECT=NO
         ENHAPBKO DSECT=NO
         ENHAPCAS DSECT=NO
         ENHAPCOM DSECT=NO
         ENHAPCOR DSECT=NO
         ENHAPDEL DSECT=NO
         ENHAPDEN DSECT=NO
         ENHAPEXE DSECT=NO
         ENHAPRES DSECT=NO
WORKLN   EQU   *-WORKAREA
***********************************************************************
*   REQISTER EQUATES
***********************************************************************
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
***********************************************************************
ENHAPUPD CSECT
ENHAPUPD AMODE 31
ENHAPUPD RMODE ANY
***********************************************************************
*   HOUSEKEEPING
***********************************************************************
         SAVE  (14,12)                 SAVE CALLERS REG 12(13)
         LR    R12,R15                 POINT TO THIS PROGRAM
        USING ENHAPUPD,R12
***********************************************************************
*   GET STORAGE FOR WORKAREA
***********************************************************************
         L     R0,=A(WORKLN)           GET SIZE OF W.A
         GETMAIN R,LV=(0)              GET WORKING STORAGE
         ST    R1,8(R13)               STORE NEW STACK +8(OLD)
         ST    R13,4(R1)               STORE OLD STACK +4(NEW)
         LR    R13,R1                  POINT R13 TO OUR STACK
        USING SAVEAREA,R13             ESTABLISH ADDRESSIBILIY
         SPACE ,
************************************************************
*        INITIALIZE AND POPULATE THE CONTROL STRUCTURE
*        NOTE: IF ANY INVENTORY MANAGEMENT MESSAGES ARE ISSUED, THEY
*        ARE WRITTEN TO THE MSG DATA SET. THE OUTPUT FROM THIS REQUEST
*        IS WRITTEN TO THE LIST DATA SET.
************************************************************
         API$INIT STG=AACTL,BLOCK=AACTL
         MVI   AACTL_SHUTDOWN,C'N'
         MVC   AACTL_MSG_DDN,=CL8'APIMSGS '
         MVC   AACTL_LIST_DDN,=CL8'       '
         MVC   AACTL_STOPRC,=H'16'
*        THIS PROGRAM IS A LARGE LOOP TO PROCESS ALL PACKAGE ACTIONS.
*        WCNT DETERMINES WHICH ACTION THE PROGRAM SHOULD
*        START THE PROCESSING WITH. CHANGING THE VALUE MAYBE DESIRED
*        FOR RESTARTING THIS PROGRAM IF AN ERROR OCCURS OR TO TEST
*        SPECIFIC ACTIONS.
         MVC   WCNT,=H'1'                START PROCESS WITH 1ST ACTION
**CMT    MVC   WCNT,=H'2'                BACKIN ACTION
**CMT    MVC   WCNT,=H'3'                BACKOUT ACTION
**CMT    MVC   WCNT,=H'4'                CAST A PACKAGE
**CMT    MVC   WCNT,=H'5'                COMMIT A PACKAGE
**CMT    MVC   WCNT,=H'6'                CREATE CORRELATION
**CMT    MVC   WCNT,=H'7'                MODIFY CORRELATION
**CMT    MVC   WCNT,=H'8'                DELETE CORRELATION
**CMT    MVC   WCNT,=H'9'                DELETE PACKAGE
**CMT    MVC   WCNT,=H'10'               DENY PACKAGE
**CMT    MVC   WCNT,=H'11'               EXECUTE
**CMT    MVC   WCNT,=H'12'               RESET
************************************************************
XLOOP1   DS    0H
         CLC   WCNT,=H'1'                ACTION COUNTER MATCH?
         BH    XLOOP2                    NO, TRY NEXT ACTION
         MVC   AACTL_MSG_DDN,=CL8'PAPMSG  '
         B     XPAP000                   APPROVE A PACKAGE LOGIC
XLOOP2   DS    0H
         CLC   WCNT,=H'2'                ACTION COUNTER MATCH?
         BH    XLOOP3                    NO, TRY NEXT ACTION
         MVC   AACTL_MSG_DDN,=CL8'PBIMSG  '
         B     XPBI000                   BACKIN A PACKAGE LOGIC
XLOOP3   DS    0H
         CLC   WCNT,=H'3'                ACTION COUNTER MATCH?
         BH    XLOOP4                    NO, TRY NEXT ACTION
         MVC   AACTL_MSG_DDN,=CL8'PBOMSG  '
         B     XPBO000                   BACKOUT A PACKAGE LOGIC
XLOOP4   DS    0H
         CLC   WCNT,=H'4'                ACTION COUNTER MATCH?
         BH    XLOOP5                    NO, TRY NEXT ACTION
         MVC   AACTL_MSG_DDN,=CL8'PCAMSG  '
         B     XPCA000                   CAST A PACKAGE LOGIC
XLOOP5   DS    0H
         CLC   WCNT,=H'5'                ACTION COUNTER MATCH?
         BH    XLOOP6                    NO, TRY NEXT ACTION
         MVC   AACTL_MSG_DDN,=CL8'PCMMSG  '
         B     XPCM000                   COMMIT A PACKAGE LOGIC
XLOOP6   DS    0H
         CLC   WCNT,=H'6'                ACTION COUNTER MATCH?
         BH    XLOOP7                    NO, TRY NEXT ACTION
         MVC   AACTL_MSG_DDN,=CL8'PCOMSGC '
         B     XPCO000C                  CREATE PKG CORRELATION LOGIC
XLOOP7   DS    0H
         CLC   WCNT,=H'7'                ACTION COUNTER MATCH?
         BH    XLOOP8                    NO, TRY NEXT ACTION
         MVC   AACTL_MSG_DDN,=CL8'PCOMSGM '
         B     XPCO000M                  MODIFY PKG CORRELATION LOGIC
XLOOP8   DS    0H
         CLC   WCNT,=H'8'                ACTION COUNTER MATCH?
         BH    XLOOP9                    NO, TRY NEXT ACTION
         MVC   AACTL_MSG_DDN,=CL8'PCOMSGD '
         B     XPCO000D                  DELETE PKG CORRELATION LOGIC
XLOOP9   DS    0H
         CLC   WCNT,=H'9'                ACTION COUNTER MATCH?
         BH    XLOOP10                   NO, TRY NEXT ACTION
         MVC   AACTL_MSG_DDN,=CL8'PDEMSG  '
         B     XPDE000                   DELETE A PACKAGE LOGIC
XLOOP10  DS    0H
         CLC   WCNT,=H'10'               ACTION COUNTER MATCH?
         BH    XLOOP11                   NO, TRY NEXT ACTION
         MVC   AACTL_MSG_DDN,=CL8'PDNMSG  '
         B     XPDN000                   DENY A PACKAGE LOGIC
XLOOP11  DS    0H
         CLC   WCNT,=H'11'               ACTION COUNTER MATCH?
         BH    XLOOP12                   NO, TRY NEXT ACTION
         MVC   AACTL_MSG_DDN,=CL8'PEXMSG  '
         B     XPEX000                   PKG EXECUTION LOGIC
XLOOP12  DS    0H
         CLC   WCNT,=H'12'               ACTION COUNTER MATCH?
         BH    XLOOP13                   NO, TRY NEXT ACTION
         MVC   AACTL_MSG_DDN,=CL8'PREMSG  '
         B     XPRE000                   RESET EXECUTION LOGIC
XLOOP13  DS    0H
         B     XSHUTDWN                  TIME TO SHUTDOWN
*
************************************************************
* APPROVE A PACKAGE REQUEST
*        INITIALIZE AND POPULATE THE REQUEST STRUCTURE
************************************************************
XPAP000  DS    0H
         API$INIT STG=APAPP_RQ,BLOCK=APAPP_RQ
* PACKAGE SELECTION CRITERIA
         MVC   APAPP_RQ_PKGID,=CL16'PKGIDVALUE      '
* RESERVE FIELD
**CMT    MVC   APAPP_RQ_RESERVE,=CL3'   '
*
************************************************************
*        BUILD PARMLIST
************************************************************
         LA    R1,WPARMLST
         LA    R14,AACTL
         ST    R14,0(0,R1)
         LA    R14,APAPP_RQ
         ST    R14,4(0,R1)
         OI    4(R1),X'80'
         B     XCALLAPI
*
************************************************************
* BACKIN A PACKAGE REQUEST
*        INITIALIZE AND POPULATE THE REQUEST STRUCTURE
************************************************************
XPBI000  DS    0H
         API$INIT STG=APBKI_RQ,BLOCK=APBKI_RQ
* PACKAGE SELECTION CRITERIA
         MVC   APBKI_RQ_PKGID,=CL16'PKGIDVALUE      '
* RESERVE FIELD
**CMT    MVC   APBKI_RQ_RESERVE,=CL3'   '
*
************************************************************
*        BUILD PARMLIST
************************************************************
         LA    R1,WPARMLST
         LA    R14,AACTL
         ST    R14,0(0,R1)
         LA    R14,APBKI_RQ
         ST    R14,4(0,R1)
         OI    4(R1),X'80'
         B     XCALLAPI
*
************************************************************
* BACKOUT A PACKAGE REQUEST
*        INITIALIZE AND POPULATE THE REQUEST STRUCTURE
************************************************************
XPBO000  DS    0H
         API$INIT STG=APBKO_RQ,BLOCK=APBKO_RQ
* PACKAGE SELECTION CRITERIA
         MVC   APBKO_RQ_PKGID,=CL16'PKGIDVALUE      '
* RESERVE FIELD
**CMT    MVC   APBKO_RQ_RESERVE,=CL3'   '
*
************************************************************
*        BUILD PARMLIST
************************************************************
         LA    R1,WPARMLST
         LA    R14,AACTL
         ST    R14,0(0,R1)
         LA    R14,APBKO_RQ
         ST    R14,4(0,R1)
         OI    4(R1),X'80'
         B     XCALLAPI
*
************************************************************
* CAST A PACKAGE REQUEST
*        INITIALIZE AND POPULATE THE REQUEST STRUCTURE
************************************************************
XPCA000  DS    0H
         API$INIT STG=APCAS_RQ,BLOCK=APCAS_RQ
* PACKAGE SELECTION CRITERIA
         MVC   APCAS_RQ_PKGID,=CL16'PKGIDVALUE      '
         MVI   APCAS_RQ_VALCMP,C'Y'
         MVI   APCAS_RQ_BOENABLED,C'Y'
         MVC   APCAS_RQ_EWF_DATE,=CL7'01JUL00'
         MVC   APCAS_RQ_EWF_TIME,=CL5'14:56'
         MVC   APCAS_RQ_EWT_DATE,=CL7'30JUL00'
         MVC   APCAS_RQ_EWT_TIME,=CL5'12:59'
* RESERVE FIELD
**CMT    MVC   APCAS_RQ_RESERVE,=CL3'   '
*
************************************************************
*        BUILD PARMLIST
************************************************************
         LA    R1,WPARMLST
         LA    R14,AACTL
         ST    R14,0(0,R1)
         LA    R14,APCAS_RQ
         ST    R14,4(0,R1)
         OI    4(R1),X'80'
         B     XCALLAPI
*
************************************************************
* COMMIT A PACKAGE REQUEST
*        INITIALIZE AND POPULATE THE REQUEST STRUCTURE
************************************************************
XPCM000  DS    0H
         API$INIT STG=APCOM_RQ,BLOCK=APCOM_RQ
* PACKAGE SELECTION CRITERIA
         MVC   APCOM_RQ_PKGID,=CL16'PKGIDVALUE      '
* RESERVE FIELD
**CMT    MVC   APCOM_RQ_RESERVE,=CL3'   '
*
************************************************************
*        BUILD PARMLIST
************************************************************
         LA    R1,WPARMLST
         LA    R14,AACTL
         ST    R14,0(0,R1)
         LA    R14,APCOM_RQ
         ST    R14,4(0,R1)
         OI    4(R1),X'80'
         B     XCALLAPI
*
************************************************************
* CREATE PKG CORRELATION REQUEST
*        INITIALIZE AND POPULATE THE REQUEST STRUCTURE
************************************************************
XPCO000C DS    0H
         API$INIT STG=APCOR_RQ,BLOCK=APCOR_RQ
* PACKAGE ID
         MVC   APCOR_RQ_PKGID,=CL16'PKGIDVALUE      '
* TYPE OF CORRELATION AND CORRELATION ID
         MVI   APCOR_RQ_FUNC,C'C'                     CREATE FUNCTION
         MVI   APCOR_RQ_TYPE,C'H'                     HARVEST TYPE
         MVC   APCOR_RQ_CORRID,=CL32'PKGCORRID'       CORRELATION ID
         MVC   APCOR_RQ_DATA,=CL80'HERE IS SOME FREE FORM CORRELATION DX
               ATA USED TO SEE IF THE DATA GETS POPULATED L'
* RESERVE FIELD
**CMT    MVC   APCOR_RQ_RESERVE,=CL3'ABC'
*
************************************************************
*        BUILD PARMLIST
************************************************************
         LA    R1,WPARMLST
         LA    R14,AACTL
         ST    R14,0(0,R1)
         LA    R14,APCOR_RQ
         ST    R14,4(0,R1)
         OI    4(R1),X'80'
         B     XCALLAPI
*
************************************************************
* MODIFY PKG CORRELATION REQUEST
*        INITIALIZE AND POPULATE THE REQUEST STRUCTURE
************************************************************
XPCO000M DS    0H
         API$INIT STG=APCOR_RQ,BLOCK=APCOR_RQ
* PACKAGE ID
         MVC   APCOR_RQ_PKGID,=CL16'PKGIDVALUE      '
* TYPE OF CORRELATION AND CORRELATION ID
         MVI   APCOR_RQ_FUNC,C'M'                     MODIFY FUNCTION
         MVI   APCOR_RQ_TYPE,C'H'                     HARVEST TYPE
         MVC   APCOR_RQ_CORRID,=CL32'PKGCORRID'       CORRELATION ID
         MVC   APCOR_RQ_DATA,=CL80'THIS TEXT CAME FROM THE MODIFY FUNCTX
               ION OF THE CORRELATION ACTION -------------L'
* RESERVE FIELD
**CMT    MVC   APCOR_RQ_RESERVE,=CL3'ABC'
*
************************************************************
*        BUILD PARMLIST
************************************************************
         LA    R1,WPARMLST
         LA    R14,AACTL
         ST    R14,0(0,R1)
         LA    R14,APCOR_RQ
         ST    R14,4(0,R1)
         OI    4(R1),X'80'
         B     XCALLAPI
*
************************************************************
* DELETE PKG CORRELATION REQUEST
*        INITIALIZE AND POPULATE THE REQUEST STRUCTURE
************************************************************
XPCO000D DS    0H
         API$INIT STG=APCOR_RQ,BLOCK=APCOR_RQ
* PACKAGE ID
         MVC   APCOR_RQ_PKGID,=CL16'PKGIDVALUE      '
* TYPE OF CORRELATION AND CORRELATION ID
         MVI   APCOR_RQ_FUNC,C'D'                     DELETE FUNCTION
         MVI   APCOR_RQ_TYPE,C'H'                     HARVEST TYPE
         MVC   APCOR_RQ_CORRID,=CL32'PKGCORRID'       CORRELATION ID
* RESERVE FIELD
**CMT    MVC   APCOR_RQ_RESERVE,=CL3'ABC'
*
************************************************************
*        BUILD PARMLIST
************************************************************
         LA    R1,WPARMLST
         LA    R14,AACTL
         ST    R14,0(0,R1)
         LA    R14,APCOR_RQ
         ST    R14,4(0,R1)
         OI    4(R1),X'80'
         B     XCALLAPI
*
************************************************************
* DELETE A PACKAGE REQUEST
*        INITIALIZE AND POPULATE THE REQUEST STRUCTURE
************************************************************
XPDE000  DS    0H
         API$INIT STG=APDEL_RQ,BLOCK=APDEL_RQ
* PACKAGE SELECTION CRITERIA
         MVC   APDEL_RQ_PKGID,=CL16'PKGIDVALUE      '
* RESERVE FIELD
**CMT    MVC   APDEL_RQ_RESERVE,=CL3'   '
*
************************************************************
*        BUILD PARMLIST
************************************************************
         LA    R1,WPARMLST
         LA    R14,AACTL
         ST    R14,0(0,R1)
         LA    R14,APDEL_RQ
         ST    R14,4(0,R1)
         OI    4(R1),X'80'
         B     XCALLAPI
*
************************************************************
* DENY A PACKAGE REQUEST
*        INITIALIZE AND POPULATE THE REQUEST STRUCTURE
************************************************************
XPDN000  DS    0H
         API$INIT STG=APDEN_RQ,BLOCK=APDEN_RQ
* PACKAGE SELECTION CRITERIA
         MVC   APDEN_RQ_PKGID,=CL16'PKGIDVALUE      '
* RESERVE FIELD
**CMT    MVC   APDEN_RQ_RESERVE,=CL3'   '
*
************************************************************
*        BUILD PARMLIST
************************************************************
         LA    R1,WPARMLST
         LA    R14,AACTL
         ST    R14,0(0,R1)
         LA    R14,APDEN_RQ
         ST    R14,4(0,R1)
         OI    4(R1),X'80'
         B     XCALLAPI
*
************************************************************
* EXECUTE A PACKAGE REQUEST
*        INITIALIZE AND POPULATE THE REQUEST STRUCTURE
************************************************************
XPEX000  DS    0H
         API$INIT STG=APEXE_RQ,BLOCK=APEXE_RQ
* PACKAGE SELECTION CRITERIA
         MVC   APEXE_RQ_PKGID,=CL16'PKGIDVALUE      '
* RESERVE FIELD
**CMT    MVC   APEXE_RQ_RESERVE,=CL3'   '
*
************************************************************
*        BUILD PARMLIST
************************************************************
         LA    R1,WPARMLST
         LA    R14,AACTL
         ST    R14,0(0,R1)
         LA    R14,APEXE_RQ
         ST    R14,4(0,R1)
         OI    4(R1),X'80'
         B     XCALLAPI
*
************************************************************
* RESET A PACKAGE REQUEST
*        INITIALIZE AND POPULATE THE REQUEST STRUCTURE
************************************************************
XPRE000  DS    0H
         API$INIT STG=APRES_RQ,BLOCK=APRES_RQ
* PACKAGE SELECTION CRITERIA
         MVC   APRES_RQ_PKGID,=CL16'PKGIDVALUE      '
* RESERVE FIELD
**CMT    MVC   APRES_RQ_RESERVE,=CL3'   '
*
************************************************************
*        BUILD PARMLIST
************************************************************
         LA    R1,WPARMLST
         LA    R14,AACTL
         ST    R14,0(0,R1)
         LA    R14,APRES_RQ
         ST    R14,4(0,R1)
         OI    4(R1),X'80'
         B     XCALLAPI
*
************************************************************
*        CALL THE ENDEVOR API INTERFACE PROGRAM
************************************************************
XCALLAPI DS    0H
         L     R15,=V(ENA$NDVR)
         BALR  R14,R15
         LR    R2,R15                    HOLD ONTO THE RETURN CODE
         LR    R3,R0                     HOLD ONTO THE REASON CODE
         CH    R15,=H'8'                 RETURN CODE GT THAN CAUTION?
         BH    XSHUTDWN                  YES, ISSUE API SHUTDOWN
**CMT    CLC   WCNT,=H'1'                NTH ACTION PROCESSED?
         CLC   WCNT,=H'12'               ALL ACTIONS PROCESSED?
         BNL   XSHUTDWN                  YES, ISSUE API SHUTDOWN
         LH    R1,WCNT                   GET CURRENT COUNT
         LA    R1,1(R1)                  ADD ONE TO COUNT
         STH   R1,WCNT                   SAVE UPDATED COUNT
         B     XLOOP1                    NO, PROCESS NEXT ACTION
************************************************************
* SHUTDOWN THE API SERVER. ONLY THE AACTL BLOCK IS REQUIRED.
************************************************************
XSHUTDWN DS    0H
         API$INIT STG=AACTL,BLOCK=AACTL
         MVI   AACTL_SHUTDOWN,C'Y'
         LA    R1,WPARMLST
         LA    R14,AACTL
         ST    R14,0(0,R1)
         OI    0(R1),X'80'
         L     R15,=V(ENA$NDVR)
         BALR  R14,R15
***********************************************************************
* PROGRAM EXIT
***********************************************************************
         LR    R5,R13                  SAVE SAVEAREA ADDRESS
         L     R13,4(R13)              POINT TO PREVIOUS SAVEAREA
*   CLEAN UP THIS PROGRAM'S STORAGE
         L     R0,=A(WORKLN)                GET SIZE
         FREEMAIN R,A=(R5),LV=(R0)          FREE STORAGE
         LR    R15,R2                       SET RETURN CODE FROM CALL
         L     R14,12(R13)
         LM    R0,R12,20(R13)
         BSM   0,R14                        RETURN
         END
