         MACRO
         MASKMAC &STRIP=NO,&CHAR=$,&MAXLTH=8
.*  TITLE 'MASKMAC'
.*
.*  (C) 1987,2005 COMPUTER ASSOCIATES INITERNATIONAL, INC.
.*
.*     THIS MACRO PARSES A STRING TO DETERMINE THE EXISTENCE,
.*     POSITION AND LENGTH OF ANY $SIGN CONTAINED WITHIN
.*     THAT STRING.
.*
.*     IN ENDEVOR MACRO CONSDEF, VARIOUS USER AND RESOURCE
.*     ATTRIBUTES MAY BE SPECIFIED.  A $SIGN CAN BE USED
.*     AS A MASKING CHARACTER, THAT IS, A CHARACTER WHICH MATCHES
.*     ANYTHING.  IN THIS WAY, A SORT OF SHORTHAND CAN BE USED
.*     WITH REGARD TO SPECIFYING THE ATTRIBUTES IN QUESTION.
.*
.*     MASKMAC ACCEPTS A VARIABLE LENGTH STRING OF CHARACTERS
.*     WHICH IS CONTAINED WITHIN THE GLOBAL SET CHARACTER SYMBOL
.*     &STR. &STR IS PARSED, BYTE BY BYTE UNTIL THE OFFSET OF
.*     THE FIRST NON-$SIGN IS FOUND.     MASKMAC THEN DETERMINES
.*     THE LENGTH OF THE REMAINING, SIGNIFICANT CHARACTERS.
.*
.*     THE OFFSET IS RETURNED IN THE GLOBAL SETA, &OFFSET.
.*     THE LENGTH IS RETURNED IN MACHINE FORMAT
.*     (IE. TRUE LENGTH -1) IN THE GLOBAL &LNGTH.
.*
.*     STRIP=YES SPECIFIES THAT TRAILING BLANKS IN THE INPUT
.*               STRING (&STR) ARE TO BE REMOVED
.*
.*     CHAR= SPECIFIES THE MASKING CHARACTER TO BE SCANNED FOR.
.*
.*     MAXLTH= SPECIFIES THE FULL LENGTH (PADDED WITH SPACES)
.*             THAT THE STRING WILL END UP AS.  USED TO SET &LNGTH
.*             WHEN NO $SIGN FOUND.
.*
.START   ANOP
.*
         GBLC  &STR                CONTAINS INPUT STRING
         LCLA  &CHARNDX,&STRLTH
         LCLC  &SCNCHAR
         GBLA  &OFFSET,&LNGTH      VALUES RETURNED IN THESE
&SCNCHAR SETC '&CHAR'
&CHARNDX SETA  1                   START WITH 1ST CHARACTER
&OFFSET  SETA  0                   ASSUME ZERO
&LNGTH   SETA  0                         OFFSET & LENGTH
&STRLTH  SETA K'&STR               OBTAIN LENGTH OF STRING
.*
.*  MNOTE  *,'ON ENTRY: STR=&STR, STRLTH=&STRLTH'
.*
.*      LOOP UNTIL A NON-$SIGN IS FOUND
.*
.ASTLOOP ANOP
    AIF ('&STR'(&CHARNDX,1) EQ ' ').ALLAST
    AIF ('&STR'(&CHARNDX,1) NE '&SCNCHAR').FNDCHR
.*
&CHARNDX SETA  &CHARNDX+1          INCREMENT LOOP COUNT
.*
    AIF (&CHARNDX LE &STRLTH).ASTLOOP
.*
.*
.*     THE INPUT STRING HAS ALL $SIGNS
.*
.*
.ALLAST  ANOP
&OFFSET  SETA  255                 SET "ALL $SIGN FLAG"
&LNGTH   SETA    0                 SET "NO COMPARE LENGTH" FLAG
         AGO     .CHKSTRP
.*
.*       A NON-$SIGN WAS FOUND
.*
.FNDCHR  ANOP
.*
&OFFSET  SETA  &CHARNDX-1          COMPUTE OFFSET RELATIVE TO ZERO
&CHARNDX SETA  &CHARNDX+1          BUMP TO NEXT CHARACTER
.*
    AIF (&CHARNDX GT &STRLTH).FNDAST       EXIT IF LENGTH EXHAUSTED
.*
.*      LOOP END OF SIGNIFICANT CHARACTERS (UNTIL NEXT $SIGN)
.*
.CHRLOOP ANOP
.*
    AIF ('&STR'(&CHARNDX,1) EQ '&SCNCHAR').FNDAST1
    AIF ('&STR'(&CHARNDX,1) EQ ' ').FNDAST     TRAIL BLANKS NOT ALLOWED
.*
&CHARNDX SETA  &CHARNDX+1
.*
    AIF (&CHARNDX LE &STRLTH).CHRLOOP
.*
.*     WHEN LENGTH IS EXHAUSTED, EFFECT IS SAME AS IF SPACE FOUND
.*
.FNDAST  ANOP                      FINAL CHAR NOT $SIGN
&CHARNDX SETA  &MAXLTH+1          COMPARE NEEDS TO BE FOR &MAXLTH CHARS
.*
.FNDAST1 ANOP                      FINAL CHAR $SIGN
&LNGTH   SETA  &CHARNDX-&OFFSET-2  COMPUTE MACHINE LENGTH
.*
.CHKSTRP ANOP
     AIF ('&STRIP' NE 'YES').ENDD  RETURN UNLESS STRIP REQUESTED
.*
.*    IF STRIP SERVICES REQUESTED, PARSE &STR FROM LEFT TO RIGHT,
.*    STOP AT THE FIRST BLANK, THEN TRUNCATE THIS AND ALL
.*    REMAINING BLANKS.
.*
&CHARNDX SETA  1                   LOOP COUNT STARTS AT 1
.*
.BLKLOOP ANOP
.*
          AIF    ('&STR'(&CHARNDX,1) EQ ' ').FNDB      BRANCH IF BLANK
&CHARNDX SETA  &CHARNDX+1                              ITERATE IF NOT
          AIF    (&CHARNDX LE &STRLTH).BLKLOOP
.FNDB    ANOP
&STR     SETC  '&STR'(1,&CHARNDX-1)    ELIM. TRAILING BLANKS
.*
.ENDD    ANOP
         MEND
         EJECT
